<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Miro Michalicka</title>
    <description>Drupal and travelling</description>
    <link>http://miromichalicka.com/</link>
    <atom:link href="http://miromichalicka.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 18 Dec 2015 18:50:05 +0100</pubDate>
    <lastBuildDate>Fri, 18 Dec 2015 18:50:05 +0100</lastBuildDate>
    <generator>Jekyll v3.0.0</generator>
    
      <item>
        <title>Custom blocks in Drupal 8</title>
        <description>&lt;p&gt;You have probably notices that CMI has some limitation in exporting custom blocks. These are unfortunately quite important for Front enders and also for client. Let me show you, how you can simply create custom blocks in code during installation of your module.&lt;/p&gt;

&lt;p&gt;If you are reading this blog, I assume you know that blocks are finally entities in Drupal 8. You can define your own block type and add some fields into it. For simple demonstration I’m using predefined custom block type Basic block with body text field. Same approach can be of course used for your custom block types with many additional fiels.&lt;/p&gt;

&lt;p&gt;First you need to create Custom block:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Drupal\block_content\Entity\BlockContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt; * Implements hook_install().&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;awesome_blocks_install&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt;   &lt;span class=&quot;nv&quot;&gt;$block_content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BlockContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;basic&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;info&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;About us&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;   &lt;span class=&quot;nv&quot;&gt;$block_content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Some long text about us...&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;   &lt;span class=&quot;nv&quot;&gt;$block_content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you install your module now, you can find this block in &lt;a href=&quot;http://your-domain.tld/admin/structure/block/block-content/types&quot;&gt;Custom block library&lt;/a&gt;. You can update all fields which is big change since Drupal 7, but you still need to show your block somewhere on page. Because block are entities, they can be displayed multiple times. You need to create block instance which can be placed into region and visibility settings can be applied. &lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-php&quot; data-lang=&quot;php&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Drupal\block\Entity\Block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Drupal\block_content\Entity\BlockContent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt;/**&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt; * Implements hook_install().&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt; &lt;span class=&quot;sd&quot;&gt; */&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;awesome_blocks_install&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;   &lt;span class=&quot;nv&quot;&gt;$block_content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BlockContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;basic&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;info&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;About us&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt;   &lt;span class=&quot;nv&quot;&gt;$block_content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;Some long text about us...&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt;   &lt;span class=&quot;nv&quot;&gt;$block_content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt;   &lt;span class=&quot;nv&quot;&gt;$block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;id&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;about_us&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;plugin&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;block_content:&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$block_content&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;uuid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;region&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;header&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;provider&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;block_content&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;weight&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;theme&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;\Drupal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;system.theme&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;visibility&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt;     &lt;span class=&quot;s1&quot;&gt;&amp;#39;settings&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt;       &lt;span class=&quot;s1&quot;&gt;&amp;#39;label&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;About us&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt;       &lt;span class=&quot;s1&quot;&gt;&amp;#39;label_display&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FALSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt;   &lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;30&lt;/span&gt;   &lt;span class=&quot;nv&quot;&gt;$block&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you just need to put this code into your module’s .install file and enable it. Enjoy :)&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Dec 2015 08:00:00 +0100</pubDate>
        <link>http://miromichalicka.com/2015/12/17/custom-blocks/</link>
        <guid isPermaLink="true">http://miromichalicka.com/2015/12/17/custom-blocks/</guid>
        
        
      </item>
    
      <item>
        <title>Twig inside Views in Drupal 8</title>
        <description>&lt;p&gt;Drupal 8 brings us except Symfony in backend also Twig for frontenders and Views for sitebuilders. Have you every thought about mixing this two parts of Drupal? In most of cases it is better if frontender knows at least basics of Drupal sitebuilding and Views are one of the most important modules for this.&lt;/p&gt;

&lt;h3 id=&quot;twig&quot;&gt;Twig&lt;/h3&gt;
&lt;p&gt;Twig is templating engine which replaced PHPTemplates in Drupal 8. It uses some own functions, filters and syntax which aren’t related to PHP or Javascript and more importantly, it protects you from complexity of Drupal data model. No more thinking if variable is array or object - you access its children the same way. These functions and filters, which modify way how are input variables displayed. Drupal also extends Twig abilities by adding some own functions, mostly related to manipulation with html attributes. More about Twig should be found on &lt;a href=&quot;http://twig.sensiolabs.org/&quot;&gt;this&lt;/a&gt; page and in Drupal &lt;a href=&quot;https://www.drupal.org/list-changes&quot;&gt;change records&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;views&quot;&gt;Views&lt;/h3&gt;
&lt;p&gt;Views is module, which knows probably everyone in Drupal world and honestly I cannot imagine building even simple presentation website without it. It offers you ability to build complex queries and display their results without having any knowledge about databases just through Drupal UI.&lt;/p&gt;

&lt;h3 id=&quot;using-twig-functions-filters-in-views&quot;&gt;Using Twig functions filters in Views&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Usecase:&lt;/strong&gt; You want to display some text all uppercase and you don’t want to do it in CSS.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drupal 7 solution:&lt;/strong&gt; You can create field template with correct name, so it will have an effect only on desired field and inside this field template you will use &lt;code&gt;strtoupper&lt;/code&gt; PHP function.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drupal 8 solution:&lt;/strong&gt; You will rewrite field with its own value and use &lt;code&gt;upper&lt;/code&gt; Twig filter. It will look this way: 
&lt;img src=&quot;/img/twig1.png&quot; alt=&quot;upper Twig filter&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;more-advanced-twig-expressions&quot;&gt;More advanced Twig expressions&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Usecase:&lt;/strong&gt; Show content of field conditionally or conditionally show content one of two fields.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drupal 7 solution:&lt;/strong&gt; Preprocessing or some naughty things in templates.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Drupal 8 solution:&lt;/strong&gt; Use Twig expressions :)
&lt;img src=&quot;/img/twig2.png&quot; alt=&quot;upper Twig filter&quot; /&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;lineno&quot;&gt;1&lt;/span&gt;  {% if field_display_text2==&amp;#39;True&amp;#39; %}
&lt;span class=&quot;lineno&quot;&gt;2&lt;/span&gt;  {{ field_text2 }}
&lt;span class=&quot;lineno&quot;&gt;3&lt;/span&gt;  {% else %}
&lt;span class=&quot;lineno&quot;&gt;4&lt;/span&gt;  {{ field_text1 }}
&lt;span class=&quot;lineno&quot;&gt;5&lt;/span&gt;  {% endif %}&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Twig makes Frontender’s life easier. I’m not saying that we should do everything possible only through UI, as I see there many risks related to harder debugging. Practical use on projects will show us the best way. &lt;/p&gt;
</description>
        <pubDate>Mon, 07 Dec 2015 08:00:00 +0100</pubDate>
        <link>http://miromichalicka.com/2015/12/07/views-twig/</link>
        <guid isPermaLink="true">http://miromichalicka.com/2015/12/07/views-twig/</guid>
        
        
      </item>
    
      <item>
        <title>Configuration management in Drupal 8</title>
        <description>&lt;p&gt;&lt;em&gt;Disclaimer: This blog represents personal opinions of author, which don’t have to be same as opinions of iKOS and the rest of its development team.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Configuration management is probably one of the most expected new features in Drupal 8. Will the CMI be salvation for developers and site builders or will we still stick with Features and/or many contrib modules for such important part of site building?&lt;/p&gt;

&lt;p&gt;I’ve been playing with Drupal 8 since I was able to install it without failure (alpha-3 probably) and I have several D8 sites in production or in process of building. Lately, I’m also part of iKOS Drupal8 Initiative, where part of team spent great amount of time figuring out the best way how to work with Drupal 8 configuration files.&lt;/p&gt;

&lt;h3 id=&quot;drupal-7-current-state&quot;&gt;Drupal 7 current state&lt;/h3&gt;
&lt;p&gt;I’ve decided to add this part because configuration and deployment workflow is for a lot of Drupal developers in Slovakia very unknown term :) I must admit, I also never paid much attention to this part of Drupal while I was developing on my own. With more serious jobs and joining large teams of developers I found this very important part of developer’s life (unfortunately).&lt;/p&gt;

&lt;p&gt;There is no standardized way how to store configuration in Drupal 7. And it’s the biggest problem. You find one module storing it in &lt;code&gt;variables&lt;/code&gt; table, another module defines its own structure.&lt;/p&gt;

&lt;p&gt;One of possible ways how to export your configuration is &lt;code&gt;Features&lt;/code&gt; module. This module digs (almost) all core configuration for you and exports it into “custom” modules. When you enable this module, configuration is imported back into your database where it lives its own unchained life. &lt;/p&gt;

&lt;p&gt;What about contrib modules? Well, if you are lucky module is using variables or module creator implemented integration with features. If you are not lucky, you are forced to write your own features integration (yey, you can contribute it) or you have to call module’s “API” and create all your configuration in some custom module. Very comfortable for site builders, isn’t it? &lt;/p&gt;

&lt;p&gt;And I forgot to mention parts about “Overridden” screen…&lt;/p&gt;

&lt;h3 id=&quot;drupal-8-cmi&quot;&gt;Drupal 8 CMI&lt;/h3&gt;

&lt;p&gt;CMI or configuration management initiative is one of the most important parts of Drupal 8. It finally standardized way, how configuration should be stored. It introduced Configuration Entities with their schemas and other cool things. And it also offers exports and imports in core. Everything looks like miracle until you start really working with it.&lt;/p&gt;

&lt;p&gt;CMI exports configuration into YAML files. YAML is cool file format similar to XML. It does support schemas and schema validations, but nobody is using that. And Git totally loves tones of plaintext files. Just try to resolve conflicts in them :)&lt;/p&gt;

&lt;p&gt;You have your configuration in YAML files in your GIT repository (you also resolved all conflicts) and your colleagues want to preview your work or continue working on some of your projects. Easy-peasy you think? So try import your config on their fresh installations. You see that error too, don’t you? After several hours you finally defeat UUID generator with copying &lt;code&gt;system.site.uuid&lt;/code&gt; from your site to their (one possible way). Now it should finally work :)&lt;/p&gt;

&lt;p&gt;Did you have some custom blocks placed on your site? Do you like their new content? They consist of 2 configurations - &lt;code&gt;block&lt;/code&gt; and &lt;code&gt;block content&lt;/code&gt;. As you can see &lt;code&gt;block content&lt;/code&gt; is content, so it is not exported with CMI:( You have to give up ability to edit your block content on web or use Deploy module or some paid service.&lt;/p&gt;

&lt;h3 id=&quot;drupal-8-features&quot;&gt;Drupal 8 Features&lt;/h3&gt;

&lt;p&gt;You want to change some configuration for your stage environment and you are trying to find out which one it should be. It probably has some dependencies. &lt;/p&gt;

&lt;p&gt;Probably the best way without learning all these dependencies is to use some configuration grouping modules. This exact thing you are able to do with Features in Drupal 8. It also offers you some kind of automation, so it automatically bundles your configuration by content types, views or other config you choose.&lt;/p&gt;

&lt;p&gt;Important thing is that you don’t need Features module on your production site as it really just export configuration and import it on your module enabling. Well, it also does some dev-env useful things, but nothing suitable for production.&lt;/p&gt;

&lt;h3 id=&quot;config-devel&quot;&gt;Config Devel&lt;/h3&gt;

&lt;p&gt;If you don’t want automatic grouping and you are little more skilled, you can use &lt;code&gt;config_devel&lt;/code&gt; module. It little automates creating of modules, but you really need to know, what you want to export.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;In iKOS we decided to carry on with core CMI for now. I’m personally playing with ideas of using Config Devel or Features. I’m sad that CMI fulfilled just half of developers needs. It doesn’t help with work in team unless you make some compromises or “hacks”. It does great job with multi-environment development of same site. I hope missing features will be added in early life phases of Drupal 8.&lt;/p&gt;
</description>
        <pubDate>Fri, 06 Nov 2015 11:00:00 +0100</pubDate>
        <link>http://miromichalicka.com/2015/11/06/configuration-d8/</link>
        <guid isPermaLink="true">http://miromichalicka.com/2015/11/06/configuration-d8/</guid>
        
        
      </item>
    
      <item>
        <title>How was DrupalCampCS 2015?</title>
        <description>&lt;p&gt;The 5th -7th June, 2015 was the date forDrupalCampCS in Bratislava, Slovakia for three days of knowledge sharing, coding and ‘downloading’ (in the local pubs).&lt;/p&gt;

&lt;p&gt;Whenever iKOS get involved with a DrupalCamp in the UK we like to contribute fully by way of organising, sponsoring, speaking and training. As we have  recently opened two offices in Slovakia, we saw DrupalCampCS as a great opportunity to get better acquainted with the Slovakian and Czech Drupal communities. &lt;/p&gt;

&lt;h3 id=&quot;drupalcamp-cs-day-one---5th-june&quot;&gt;DrupalCamp CS DAY ONE - 5th June&lt;/h3&gt;
&lt;p&gt;DrupalCampCS began on Friday morning with Drupal training and sprints planned.  &lt;/p&gt;

&lt;h4 id=&quot;drupal-training-for-beginners---streamed-live-from-london&quot;&gt;Drupal Training for Beginners - Streamed live from London&lt;/h4&gt;
&lt;p&gt;The first Drupal training session was aimed at attendees new to Drupal and, thanks to the University’s technical department, we had our head of training - Nick Abbott - streaming his Drupal training course live from London. This remote training worked really well thanks to Milan Lukac from Slovakia, in the room to help any attendees with translation or technical questions.  &lt;/p&gt;

&lt;h4 id=&quot;drupal-commerce-training&quot;&gt;Drupal Commerce Training&lt;/h4&gt;
&lt;p&gt;Having worked as part of the team to deliver one of the highest profile Drupal Commerce websites for Lush (www.lush.co.uk), Karol Kasas was able to provide real-world insight and training on the correct usage of Drupal Commerce. To a workshop of 10 attendees, Karol covered both the complete basics of Drupal Commerce through to advanced topics such as VAT handling. By the end of day, people left his workshop with a fully functional eCommerce built with Drupal Commerce - WOW!   &lt;/p&gt;

&lt;h4 id=&quot;sprinting---drupal-8-rules&quot;&gt;Sprinting - Drupal 8 Rules!&lt;/h4&gt;
&lt;p&gt;Fresh from a day of training, both Milan and Karol joined the sprinting room, where a small team had come together looking at the Drupal 8 Rules issue queue. &lt;/p&gt;

&lt;h4 id=&quot;friday-night---traditional-slovak-pub&quot;&gt;Friday night - traditional Slovak pub&lt;/h4&gt;
&lt;p&gt;In the evening most headed to a fantastic local brewery called Richtar Jakub (Mayor Jacob), where they met with Drupal superstars Robert Douglass and our technical team leader Richard Jones. Everyone tasted locally brewed beer and some traditional Slovak meat dishes. After this, people headed to Bratislava restaurant, where they tasted some very traditional Slovak food called “bryndzove halusky” (small potato dumplings with cottage cheese).&lt;/p&gt;

&lt;h3 id=&quot;day-two---6th-june&quot;&gt;DAY TWO - 6th June&lt;/h3&gt;

&lt;p&gt;Saturday began with session called State of Drupal. During this session the chairman of Slovak Drupal Association, Jozef Toth, asked Richard Jones about his beginnings and thoughts relating to Drupal in general and the impact of the delayed release of Drupal8.&lt;/p&gt;

&lt;p&gt;During the day all members of our Slovak team attended interesting sessions held by experts from far and wide. Tomas and Oliver focussed on learning more about the theming layer in Drupal 8 using Twig, while the rest of the team joined session called OCD Deployment, where they learned how to make updates faster and less risky. &lt;/p&gt;

&lt;h4 id=&quot;lush---drupal-commerce-case-study&quot;&gt;Lush - Drupal Commerce case study&lt;/h4&gt;

&lt;p&gt;As technical director of iKOS, Richard Jones was able to talk about our experience of building one of the largest Drupal Commerce responsive websites for the UK, headquartered retailer, Lush. &lt;/p&gt;

&lt;h4 id=&quot;drupal-performance&quot;&gt;Drupal Performance&lt;/h4&gt;
&lt;p&gt;Following on from Richard’s talk, Milan Lukac opened up the topic of Drupal performance. Milan started with basic Drupal’s built-in possibilities before expanding and explaining the benefits and pitfalls of using various contributed modules.&lt;/p&gt;

&lt;h4 id=&quot;the-core-message-from-day-two&quot;&gt;The core message from day two&lt;/h4&gt;
&lt;p&gt;For me the takeaway and most important lesson learned related to the changes in Drupal 8 relating to the entity API from our guest speaker Wolfgang Ziegler (fago in the Drupal community).&lt;/p&gt;

&lt;h4 id=&quot;ice-ice-baby&quot;&gt;Ice ice baby&lt;/h4&gt;
&lt;p&gt;After a day of hot sessions we headed to cool off and experience the amazing ice bar.  &lt;/p&gt;

&lt;h3 id=&quot;day-3---7th-june&quot;&gt;Day 3 - 7th June&lt;/h3&gt;
&lt;p&gt;The last day of camp kicked off with Karol and Milan teaching developers how to use Drupal Services for developers who want to build their own APIs to extend and integrate with Drupal. Milan and Karol did pretty amazing job as they showed not only how to use in-build Services, but also how to code their own service. &lt;/p&gt;

&lt;h4 id=&quot;after-the-camp&quot;&gt;After the camp&lt;/h4&gt;
&lt;p&gt;We are also pleased to announces that iKOS Digital has accepted the challenge to help the #d8rules team to finish Milestone 1 in this important project. Within a week of DrupalCampCS Karol got his first commit into Rules 8.x &lt;/p&gt;

&lt;p&gt;&lt;em&gt;Originally published on: &lt;a href=&quot;http://i-kos.com/developing/blog/2015-08-11/drupalcampcs-2015-bratislava-our-report-great-drupal-community-event&quot;&gt;http://i-kos.com/developing/blog/2015-08-11/drupalcampcs-2015-bratislava-our-report-great-drupal-community-event&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Sep 2015 14:00:00 +0200</pubDate>
        <link>http://miromichalicka.com/2015/09/07/how-was-dccs-2015/</link>
        <guid isPermaLink="true">http://miromichalicka.com/2015/09/07/how-was-dccs-2015/</guid>
        
        
      </item>
    
      <item>
        <title>Drupalaton 2015</title>
        <description>&lt;p&gt;The middle of summer is for a lot of Drupalists in Europe connected with Drupalcamp organised on shores of lake Balaton - Drupalaton. This year it was my 2nd time I attended this conference., first time as part of iKOS. For me personally, Drupalaton is one of the best Drupal-related conferences, I have ever attended. Do you want to know why? Read following report.&lt;/p&gt;

&lt;h3 id=&quot;water--drupal--drupalaton&quot;&gt;Water + Drupal = Drupalaton&lt;/h3&gt;
&lt;p&gt;Drupalaton is organised in lovely Hungarian city of Keszthely. This city lies on bank of lake Balaton, one of the biggest drinking water lake in Europe. Therefore Drupalaton offers right amount of fun, bathing and Drupal. What else can Drupalist want?&lt;/p&gt;

&lt;h3 id=&quot;look-to-the-future-starting&quot;&gt;Look to the future starting&lt;/h3&gt;
&lt;p&gt;This year the conference started on Thursday morning with sprinting on Drupal 8 issues. I picked one, which has provided me a lot of fun for all conference days. For those, who has never attended any sprints, they usually consist of a lot of googling and talking with sprint mentors. My issue has involved changes in comment type form and changes in related configuration schemas. &lt;/p&gt;

&lt;p&gt;After lunch break organisers welcomed us at conference and provided a little place for sponsors. Right after, the first speaker, Márk Kiss, presented differences in Form API of Drupal 7, Symfony2 framework and Drupal 8. For me, it is very sad that Form API in D8 has changed little from Drupal 7. I hope we can find a way how to use nice OO forms from Symfony2.&lt;/p&gt;

&lt;p&gt;The second speaker, Gergely Pap, was presenting topic which should have been more interesting for my FE oriented colleagues. He was talking about his FE experiences from his first client Drupal 8 site. The more I work with D8, the more I see that FE has undertaken major changes since D7. I like the way how is easy to marry it with the newest technologies in this part of web development. As was mentioned also in the session, it still doesn’t offer enough flexibility, so non-Drupal FE developer will be fighting with it a lot. I admire speaker that he released his base theme for D8 in this stage when especially theming layer in D8 is pretty unstable. &lt;/p&gt;

&lt;p&gt;The last session of the first day was business oriented. The founders of Hungarian Drupal-oriented company Cheppers were talking about their growth and motivation for running successful Drupal shop. It offered me also some insight into Hungarian Drupal community which obviously shares a lot of similarities with the Slovak one.&lt;/p&gt;

&lt;p&gt;In the evening I submitted first version of the patch. It failed. Dammit!&lt;/p&gt;

&lt;h3 id=&quot;speeding-up&quot;&gt;Speeding up&lt;/h3&gt;
&lt;p&gt;The second day there were two tracks. I started with the main room where one of the biggest minds of Drupal world chx had his session. It was very important for every developer in D8, because it was about storing data in D8. The most important thing to remember from it - variables are dead, configuration live long and prosper. Everything else is on D.o.&lt;/p&gt;

&lt;p&gt;The second session was very closely related to previous one as it was about Configuration management. As title says, the session was about workflow with configuration files in D8. It showed that all that glitters is not gold. I think that D8 Features will take solid place in our development processes for a very long time.&lt;/p&gt;

&lt;p&gt;The last session of that day was held by fabulous Gabor Hojtsy. He showed how to use Drupal 8 in its current state without any contrib modules with focus on multilingual sites. It was probably the best sum up of D8 abilities and new features I’ve ever seen. And it was everything working live!&lt;/p&gt;

&lt;p&gt;Between session I was working on fixing of my issue. I had problems with translation of my new configuration, so I talked with Ruben and with joint forces we found solution - for everything related to translations, look on Gabor’s website. There were also suggestions for another solution, but after consultation with Gabor we decided to stick to original solution.&lt;/p&gt;

&lt;p&gt;The Friday evening was the first of social events. It was boat party. We took 100-years old boat Helka, which showed us another sight of Balaton. Organisers also prepared for us small bufet of Hungarian specialities - perkelt with noodles and Hortobany palacsinka.&lt;/p&gt;

&lt;h3 id=&quot;behold---drupal-8&quot;&gt;Behold - Drupal 8&lt;/h3&gt;
&lt;p&gt;The last day of sessions started by session by Xano about Plugin API in D8. Plugin API is one of the most interesting and important APIs in D8, because it is used for almost everything. Xano went through its cons and pros and showed us the most basic usage as custom block. If you install the Plugin module, you can see all modules defining their own plugins.&lt;/p&gt;

&lt;p&gt;The last session of Drupalaton 2015 was about prototyping in Drupal. It was divided into 2 parts. The first was showing pros and cons of using Drupal as prototyping tool. Speaker Kristoff van Tomme has some experiences with building startup based on Drupal and he tried to explain its advantages over probably the most spread prototyping tool Wordpress. The second part was held by László Csécsy who has real project experience with prototyping with Drupal. As he said, they are really close to release their project, they are still creating only prototypes, but he is not worried about successful delivery of the project. As he revealed, prototyping helped them to fulfil expectations of extremely hard-to-satisfy client. The very helpful was discussion after sessions where both speakers were showing their high professional attitude.&lt;/p&gt;

&lt;p&gt;Between session and during lunch break I was still working on D8 issues. I finally submitted patch which was accepted by testbot and also community. I picked another one issue which is related to path alias generation. I submitted patch which was accepted by testbot, but it will require another manual testing and maybe new automated tests because it is important part of Drupal core.&lt;/p&gt;

&lt;p&gt;The last day of Drupalaton was all-day sprint. I was sprinting in the morning on some other issues and afternoon I made little trip to Balaton neighbourhood.&lt;/p&gt;

&lt;p&gt;In the end of event, I can say, that I’ve learned a lot of new things and I’ve spoken with many wise people. It is nice to see community working together to solve remaining issues in Drupal 8. It will be great tool changing clear water of CMS world. I am looking forward to trying it in my first client project.&lt;/p&gt;
</description>
        <pubDate>Tue, 11 Aug 2015 00:00:00 +0200</pubDate>
        <link>http://miromichalicka.com/2015/08/11/drupalaton-2015/</link>
        <guid isPermaLink="true">http://miromichalicka.com/2015/08/11/drupalaton-2015/</guid>
        
        
      </item>
    
  </channel>
</rss>
